{"error":"Event validation failed: date: Path `date` is required.","level":"error","message":"Event creation failed","method":"POST","path":"/api/events","requestId":"857beb14-6af8-41a2-9c0b-101a0e29923b","timestamp":"2025-07-04 00:47:54","userId":"68662369746abb68edd3b495"}
{"_message":"Event validation failed","errors":{"date":{"kind":"required","message":"Path `date` is required.","name":"ValidatorError","path":"date","properties":{"message":"Path `date` is required.","path":"date","type":"required"}}},"level":"error","message":"ðŸ’¥ Critical Error: Event validation failed: date: Path `date` is required. Event validation failed: date: Path `date` is required.","status":"error","statusCode":500,"timestamp":"2025-07-04 00:47:54"}
{"error":"Event validation failed: date: Path `date` is required.","level":"error","message":"Event creation failed","method":"POST","path":"/api/events","requestId":"02f4dcdc-f553-4824-83c7-3adb3ea49625","timestamp":"2025-07-04 00:49:27","userId":"68662369746abb68edd3b495"}
{"_message":"Event validation failed","errors":{"date":{"kind":"required","message":"Path `date` is required.","name":"ValidatorError","path":"date","properties":{"message":"Path `date` is required.","path":"date","type":"required"}}},"level":"error","message":"ðŸ’¥ Critical Error: Event validation failed: date: Path `date` is required. Event validation failed: date: Path `date` is required.","status":"error","statusCode":500,"timestamp":"2025-07-04 00:49:27"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 00:49:37"}
{"error":"Event validation failed: date: Path `date` is required.","level":"error","message":"Event creation failed","method":"POST","path":"/api/events","requestId":"716f2db6-2b19-4a3b-bb70-44638e2b751c","timestamp":"2025-07-04 00:49:48","userId":"68662369746abb68edd3b495"}
{"_message":"Event validation failed","errors":{"date":{"kind":"required","message":"Path `date` is required.","name":"ValidatorError","path":"date","properties":{"message":"Path `date` is required.","path":"date","type":"required"}}},"level":"error","message":"ðŸ’¥ Critical Error: Event validation failed: date: Path `date` is required. Event validation failed: date: Path `date` is required.","status":"error","statusCode":500,"timestamp":"2025-07-04 00:49:48"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 00:54:22"}
{"level":"error","message":"TypeError","timestamp":"2025-07-04 00:54:22"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 00:56:51"}
{"level":"error","message":"TypeError","timestamp":"2025-07-04 00:56:51"}
{"error":"Event validation failed: date: Path `date` is required.","level":"error","message":"Event creation failed","method":"POST","path":"/api/events","requestId":"9597f0d3-8cc5-4191-997f-72dafb8210cb","timestamp":"2025-07-04 00:58:46","userId":"68662369746abb68edd3b495"}
{"_message":"Event validation failed","errors":{"date":{"kind":"required","message":"Path `date` is required.","name":"ValidatorError","path":"date","properties":{"message":"Path `date` is required.","path":"date","type":"required"}}},"level":"error","message":"ðŸ’¥ Critical Error: Event validation failed: date: Path `date` is required. Event validation failed: date: Path `date` is required.","status":"error","statusCode":500,"timestamp":"2025-07-04 00:58:46"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 01:29:27"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 01:41:03"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 01:45:42"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 01:48:39"}
{"error":"No tickets found","level":"error","message":"Ticket search failed","method":"GET","path":"/api/tickets/search","query":{"phone":" 26812345678"},"requestId":"7f63b280-f624-4b40-8d46-55bdeaac05e0","timestamp":"2025-07-04 01:53:44"}
{"error":"No tickets found","level":"error","message":"Ticket search failed","method":"GET","path":"/api/tickets/search","query":{"phone":" 26812345678"},"requestId":"e0cc15f2-0886-4590-8956-06b0c7c0c300","timestamp":"2025-07-04 01:56:14"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"0d111ae6-498a-42f5-901f-98884faa582e","timestamp":"2025-07-04 01:58:35"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"418847de-a10c-482c-989d-d3dac7b5cdec","timestamp":"2025-07-04 02:09:52"}
{"error":"No tickets found","level":"error","message":"Ticket search failed","method":"GET","path":"/api/tickets/search","query":{"phone":" 26812345678"},"requestId":"0dae72e7-70cf-4f72-866d-246fcb2db8c0","timestamp":"2025-07-04 02:12:48"}
{"error":"No tickets found","level":"error","message":"Ticket search failed","method":"GET","path":"/api/tickets/search","query":{"phone":" 26812345678"},"requestId":"8df2557f-7d12-4f0f-89d3-7d53129b8099","timestamp":"2025-07-04 02:13:39"}
{"error":"No tickets found","level":"error","message":"Ticket search failed","method":"GET","path":"/api/tickets/search","query":{"email":"attendee1@test.com"},"requestId":"3a740e58-8ec2-4fb1-8cfa-750809319337","timestamp":"2025-07-04 02:14:44"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 02:24:04"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 02:36:22"}
{"level":"error","message":"TypeError","timestamp":"2025-07-04 02:36:22"}
{"error":"User validation failed: password: Path `password` (`test123`) is shorter than the minimum allowed length (8).","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"c23df063-cfa5-40a3-b94c-95e8dc10818f","timestamp":"2025-07-04 02:37:08"}
{"_message":"User validation failed","errors":{"password":{"kind":"minlength","message":"Path `password` (`test123`) is shorter than the minimum allowed length (8).","name":"ValidatorError","path":"password","properties":{"message":"Path `password` (`test123`) is shorter than the minimum allowed length (8).","minlength":8,"path":"password","type":"minlength","value":"test123"},"value":"test123"}},"level":"error","message":"ðŸ’¥ Critical Error: User validation failed: password: Path `password` (`test123`) is shorter than the minimum allowed length (8). User validation failed: password: Path `password` (`test123`) is shorter than the minimum allowed length (8).","status":"error","statusCode":500,"timestamp":"2025-07-04 02:37:08"}
{"error":"Email or phone required","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"bfa01855-da02-448b-972e-b0e4af220af7","timestamp":"2025-07-04 02:39:53"}
{"eventId":"686623d9746abb68edd3b499","level":"error","message":"Event not found","method":"POST","path":"/api/tickets/purchase","requestId":"8c9947e5-df06-472c-b30d-a1a74586730c","timestamp":"2025-07-04 02:41:35"}
{"error":"Event not found","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"8c9947e5-df06-472c-b30d-a1a74586730c","stack":"Error: Event not found\n    at D:\\Projects\\eswatickets\\backend\\routes\\ticketRoutes.js:44:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 02:41:35"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"86223b7c-07b0-4559-afad-68a64dc71d66","timestamp":"2025-07-04 02:41:55"}
{"error":"Email already exits","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"452d231c-53ba-4408-b788-6a8517b9d719","timestamp":"2025-07-04 02:42:39"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"ff7626e2-48ae-4b78-9a4e-627642984b0c","timestamp":"2025-07-04 02:44:06"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"266b861a-2301-4481-9da2-85d56a89214b","timestamp":"2025-07-04 02:44:10"}
{"error":"Phone already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"95045c8a-cfa6-4f41-a342-552227723920","timestamp":"2025-07-04 02:44:41"}
{"error":"Phone already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"fb1627d9-0026-4809-8ec2-fed5df3cf81b","timestamp":"2025-07-04 02:44:46"}
{"error":"Phone already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"d93eb869-c755-4b43-981b-b1d43ed91b00","timestamp":"2025-07-04 02:44:56"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"f42f2656-6c81-4b38-8ecb-d7c1291a5fb9","timestamp":"2025-07-04 02:45:39"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"5e0e3823-4904-484f-b330-c4ecc38fccad","timestamp":"2025-07-04 02:45:41"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"24270734-d8f2-4674-8271-b2430a199846","timestamp":"2025-07-04 02:45:42"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"2ebbc3b2-55f0-4a19-916a-1e0a83dafb1b","timestamp":"2025-07-04 02:45:43"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"40613cd5-3cf7-4fa7-ad07-54032847b3b3","timestamp":"2025-07-04 02:45:44"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"7f3fd78b-62a1-48bf-b20b-80a59f0f7f88","timestamp":"2025-07-04 02:45:44"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"f8080221-0c42-4d66-a221-3a7601a62dc2","timestamp":"2025-07-04 02:45:45"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"cf03e9a9-241a-4e11-965c-60ee94f7d815","timestamp":"2025-07-04 02:45:45"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"f64c2bbb-32bd-4df6-86cf-9c2ee6dee3a9","timestamp":"2025-07-04 02:45:46"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"7d982b90-b811-49f0-9c16-843e590e0cf4","timestamp":"2025-07-04 02:45:46"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"05a13cbf-aa46-4d18-9277-e5c8554c9d35","timestamp":"2025-07-04 02:51:20"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"5f652dfc-f8d2-439e-86bc-b70688c86b87","timestamp":"2025-07-04 02:51:41"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 02:52:21"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"f8474022-bbe8-4f92-84f4-e78024c87fdb","timestamp":"2025-07-04 02:52:33"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"30ba0440-4c74-4a69-b06f-d2f758f4f563","timestamp":"2025-07-04 02:52:55"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"8ad31d78-1975-440f-a1be-9117e26db252","timestamp":"2025-07-04 02:53:27"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"9a9ba28a-c719-45dc-9e1c-4a75ee7f9f7a","timestamp":"2025-07-04 02:53:32"}
{"error":"Phone already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"6466cdeb-b407-43e7-99f7-e7498a4e038a","timestamp":"2025-07-04 02:54:45"}
{"error":"Phone already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"8061187c-6fd3-4f64-8ace-f86e7caba198","timestamp":"2025-07-04 02:54:48"}
{"error":"Can't extract geo keys: { _id: ObjectId('68672b1de7d8a21ff4bbdb60'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672b1de7d8a21ff4bbdb61') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672b1de7d8a21ff4bbdb62') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591709984), updatedAt: new Date(1751591709984), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","level":"error","message":"Event creation failed","method":"POST","path":"/api/events","requestId":"80fa1fb3-b223-4b18-af73-bc06018faad8","timestamp":"2025-07-04 03:15:10","userId":"68672abbe7d8a21ff4bbdb5c"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('68672b1de7d8a21ff4bbdb60'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672b1de7d8a21ff4bbdb61') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672b1de7d8a21ff4bbdb62') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591709984), updatedAt: new Date(1751591709984), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('68672b1de7d8a21ff4bbdb60'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672b1de7d8a21ff4bbdb61') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672b1de7d8a21ff4bbdb62') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591709984), updatedAt: new Date(1751591709984), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\" Can't extract geo keys: { _id: ObjectId('68672b1de7d8a21ff4bbdb60'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672b1de7d8a21ff4bbdb61') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672b1de7d8a21ff4bbdb62') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591709984), updatedAt: new Date(1751591709984), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","status":"error","statusCode":500,"timestamp":"2025-07-04 03:15:10"}
{"error":"Can't extract geo keys: { _id: ObjectId('68672bafe7d8a21ff4bbdb65'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672bafe7d8a21ff4bbdb66') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672bafe7d8a21ff4bbdb67') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591855153), updatedAt: new Date(1751591855153), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","level":"error","message":"Event creation failed","method":"POST","path":"/api/events","requestId":"41c78748-b2a5-4649-a392-eb51707e4ada","timestamp":"2025-07-04 03:17:35","userId":"68672abbe7d8a21ff4bbdb5c"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('68672bafe7d8a21ff4bbdb65'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672bafe7d8a21ff4bbdb66') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672bafe7d8a21ff4bbdb67') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591855153), updatedAt: new Date(1751591855153), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('68672bafe7d8a21ff4bbdb65'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672bafe7d8a21ff4bbdb66') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672bafe7d8a21ff4bbdb67') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591855153), updatedAt: new Date(1751591855153), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\" Can't extract geo keys: { _id: ObjectId('68672bafe7d8a21ff4bbdb65'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('68672bafe7d8a21ff4bbdb66') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('68672bafe7d8a21ff4bbdb67') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751591855153), updatedAt: new Date(1751591855153), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","status":"error","statusCode":500,"timestamp":"2025-07-04 03:17:35"}
{"error":"Can't extract geo keys: { _id: ObjectId('6867351b1752fdbe890085ae'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('6867351b1752fdbe890085af') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('6867351b1752fdbe890085b0') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594267140), updatedAt: new Date(1751594267140), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","level":"error","message":"Event creation failed","method":"POST","path":"/api/events","requestId":"e529e73e-6573-4a37-b382-08f0387e91ba","timestamp":"2025-07-04 03:57:47","userId":"68672abbe7d8a21ff4bbdb5c"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('6867351b1752fdbe890085ae'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('6867351b1752fdbe890085af') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('6867351b1752fdbe890085b0') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594267140), updatedAt: new Date(1751594267140), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('6867351b1752fdbe890085ae'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('6867351b1752fdbe890085af') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('6867351b1752fdbe890085b0') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594267140), updatedAt: new Date(1751594267140), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\" Can't extract geo keys: { _id: ObjectId('6867351b1752fdbe890085ae'), name: \"MTN Bushfire 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"Malkerns Valley\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, _id: ObjectId('6867351b1752fdbe890085af') }, { name: \"General\", price: 200, capacity: 1000, _id: ObjectId('6867351b1752fdbe890085b0') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594267140), updatedAt: new Date(1751594267140), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","status":"error","statusCode":500,"timestamp":"2025-07-04 03:57:47"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('68673660352986eb7d761114'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673660352986eb7d761115') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673660352986eb7d761116') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594592990), updatedAt: new Date(1751594592990), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('68673660352986eb7d761114'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673660352986eb7d761115') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673660352986eb7d761116') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594592990), updatedAt: new Date(1751594592990), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\" Can't extract geo keys: { _id: ObjectId('68673660352986eb7d761114'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673660352986eb7d761115') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673660352986eb7d761116') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594592990), updatedAt: new Date(1751594592990), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","status":"error","statusCode":500,"timestamp":"2025-07-04 04:03:13"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('68673669352986eb7d761119'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673669352986eb7d76111a') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673669352986eb7d76111b') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594601787), updatedAt: new Date(1751594601787), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('68673669352986eb7d761119'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673669352986eb7d76111a') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673669352986eb7d76111b') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594601787), updatedAt: new Date(1751594601787), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\" Can't extract geo keys: { _id: ObjectId('68673669352986eb7d761119'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673669352986eb7d76111a') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673669352986eb7d76111b') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594601787), updatedAt: new Date(1751594601787), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","status":"error","statusCode":500,"timestamp":"2025-07-04 04:03:21"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 04:03:24"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('68673675231aae77a739de67'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673675231aae77a739de68') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673675231aae77a739de69') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594613548), updatedAt: new Date(1751594613548), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('68673675231aae77a739de67'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673675231aae77a739de68') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673675231aae77a739de69') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594613548), updatedAt: new Date(1751594613548), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\" Can't extract geo keys: { _id: ObjectId('68673675231aae77a739de67'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673675231aae77a739de68') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673675231aae77a739de69') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594613548), updatedAt: new Date(1751594613548), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","status":"error","statusCode":500,"timestamp":"2025-07-04 04:03:33"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('68673682231aae77a739de6c'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673682231aae77a739de6d') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673682231aae77a739de6e') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594626050), updatedAt: new Date(1751594626050), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('68673682231aae77a739de6c'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673682231aae77a739de6d') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673682231aae77a739de6e') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594626050), updatedAt: new Date(1751594626050), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\" Can't extract geo keys: { _id: ObjectId('68673682231aae77a739de6c'), name: \"Bushfire Festival 2025\", date: new Date(1748628000000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1559\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('68673682231aae77a739de6d') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('68673682231aae77a739de6e') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594626050), updatedAt: new Date(1751594626050), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1559\"","status":"error","statusCode":500,"timestamp":"2025-07-04 04:03:46"}
{"code":16755,"errorLabelSet":{},"errorResponse":{"code":16755,"errmsg":"Can't extract geo keys: { _id: ObjectId('686737a0a09826ad1a3386d0'), name: \"Bushfire Festival\", date: new Date(1753898400000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('686737a0a09826ad1a3386d1') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('686737a0a09826ad1a3386d2') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594912902), updatedAt: new Date(1751594912902), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","index":0},"index":0,"level":"error","message":"ðŸ’¥ Critical Error: Can't extract geo keys: { _id: ObjectId('686737a0a09826ad1a3386d0'), name: \"Bushfire Festival\", date: new Date(1753898400000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('686737a0a09826ad1a3386d1') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('686737a0a09826ad1a3386d2') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594912902), updatedAt: new Date(1751594912902), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\" Can't extract geo keys: { _id: ObjectId('686737a0a09826ad1a3386d0'), name: \"Bushfire Festival\", date: new Date(1753898400000), isActive: true, location: { venue: \"House on Fire\", gps: \"-26.5225,31.1558\" }, ticketTypes: [ { name: \"VIP\", price: 500, capacity: 100, available: 100, _id: ObjectId('686737a0a09826ad1a3386d1') }, { name: \"General\", price: 200, capacity: 1000, available: 1000, _id: ObjectId('686737a0a09826ad1a3386d2') } ], organizer: ObjectId('68672abbe7d8a21ff4bbdb5c'), createdAt: new Date(1751594912902), updatedAt: new Date(1751594912902), __v: 0 }  geo element must be an array or object: gps: \"-26.5225,31.1558\"","status":"error","statusCode":500,"timestamp":"2025-07-04 04:08:32"}
{"error":"Ticket validation failed: price: Path `price` is required., tier: `general` is not a valid enum value for path `tier`.","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"4769f8bd-d50d-439a-b44d-bb945067d137","stack":"ValidationError: Ticket validation failed: price: Path `price` is required., tier: `general` is not a valid enum value for path `tier`.\n    at Document.invalidate (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\document.js:3352:32)\n    at D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\document.js:3113:17\n    at D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-07-04 04:23:17"}
{"_message":"Ticket validation failed","errors":{"price":{"kind":"required","message":"Path `price` is required.","name":"ValidatorError","path":"price","properties":{"message":"Path `price` is required.","path":"price","type":"required"}},"tier":{"kind":"enum","message":"`general` is not a valid enum value for path `tier`.","name":"ValidatorError","path":"tier","properties":{"enumValues":["VIP","Early Bird","General"],"message":"`general` is not a valid enum value for path `tier`.","path":"tier","type":"enum","value":"general"},"value":"general"}},"level":"error","message":"ðŸ’¥ Critical Error: Ticket validation failed: price: Path `price` is required., tier: `general` is not a valid enum value for path `tier`. Ticket validation failed: price: Path `price` is required., tier: `general` is not a valid enum value for path `tier`.","status":"error","statusCode":500,"timestamp":"2025-07-04 04:23:17"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"d83809e1-a43c-43ea-b5c0-5f3cf89e8f08","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 04:24:14"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 04:24:14"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"9b740457-083d-4f56-a82c-7ae07a513639","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 04:24:35"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 04:24:35"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"fb7022fa-af65-4df7-9c06-caa35686de72","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 04:27:33"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 04:27:33"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"4e7cb0bf-8d31-433f-8e42-f8c603c337da","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 04:28:08"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 04:28:08"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"d7b17493-1a73-401e-b02f-76bb38127674","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 08:11:59"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 08:11:59"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"16f17f74-75d9-47d1-aa89-c965a8b88565","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 08:12:32"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 08:12:32"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"db391620-57b0-4dd1-91f6-ec02f5e3f733","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 08:12:59"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 08:12:59"}
{"error":"Cast to ObjectId failed for value \"686739aa84158bba85c497afs\" (type string) at path \"_id\" for model \"Event\"","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"18a54a9b-98aa-460b-b41f-2ff38f42500f","stack":"CastError: Cast to ObjectId failed for value \"686739aa84158bba85c497afs\" (type string) at path \"_id\" for model \"Event\"\n    at SchemaObjectId.cast (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\schema\\objectId.js:251:11)\n    at SchemaType.applySetters (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1255:12)\n    at SchemaType.castForQuery (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1673:17)\n    at cast (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\cast.js:390:32)\n    at Query.cast (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\query.js:5055:12)\n    at Query._castConditions (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\query.js:2351:10)\n    at model.Query._findOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\query.js:2674:8)\n    at model.Query.exec (D:\\Projects\\eswatickets\\backend\\node_modules\\mongoose\\lib\\query.js:4604:80)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async D:\\Projects\\eswatickets\\backend\\routes\\ticketRoutes.js:41:19","timestamp":"2025-07-04 08:13:07"}
{"kind":"ObjectId","level":"error","message":"ðŸ’¥ Critical Error: Cast to ObjectId failed for value \"686739aa84158bba85c497afs\" (type string) at path \"_id\" for model \"Event\" Cast to ObjectId failed for value \"686739aa84158bba85c497afs\" (type string) at path \"_id\" for model \"Event\"","path":"_id","reason":{},"status":"error","statusCode":500,"stringValue":"\"686739aa84158bba85c497afs\"","timestamp":"2025-07-04 08:13:07","value":"686739aa84158bba85c497afs","valueType":"string"}
{"error":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"77386ad1-e4e6-4515-b19d-1fe5235bc2be","stack":"MongoServerError: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }\n    at InsertOneOperation.execute (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\insert.js:51:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async tryOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:207:20)\n    at async executeOperation (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\operations\\execute_operation.js:75:16)\n    at async Collection.insertOne (D:\\Projects\\eswatickets\\backend\\node_modules\\mongodb\\lib\\collection.js:157:16)","timestamp":"2025-07-04 08:17:41"}
{"code":11000,"errorLabelSet":{},"errorResponse":{"code":11000,"errmsg":"E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null}},"index":0,"keyPattern":{"refundHistory.idempotencyKey":1},"keyValue":{"refundHistory.idempotencyKey":null},"level":"error","message":"ðŸ’¥ Critical Error: E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null } E11000 duplicate key error collection: test.tickets index: refundHistory.idempotencyKey_1 dup key: { refundHistory.idempotencyKey: null }","status":"error","statusCode":500,"timestamp":"2025-07-04 08:17:41"}
{"error":"Validation error: \"password\" with value \"secure123456\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"da9eaa93-382c-40c1-961a-0459157608a7","timestamp":"2025-07-04 08:34:22"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"8feebcd1-61dc-4c30-a34d-26f0a5cfb37d","timestamp":"2025-07-04 08:35:45"}
{"error":"Validation error: \"password\" length must be at least 8 characters long","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"49ffbd33-b15c-4892-9f05-cabf18f3c0d7","timestamp":"2025-07-04 08:36:33"}
{"error":"Validation error: \"password\" with value \"12345679\" fails to match the required pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"bed19121-a2dd-422f-a314-b3e31f5cb107","timestamp":"2025-07-04 08:36:47"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 08:42:21"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 08:43:51"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 08:44:02"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 08:44:09"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 08:50:32"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 09:29:48"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 09:29:51"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 09:30:10"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 09:30:30"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 09:30:54"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 09:56:13"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot read properties of undefined (reading 'refreshToken') Cannot read properties of undefined (reading 'refreshToken')","status":"error","statusCode":500,"timestamp":"2025-07-04 09:59:04"}
{"error":"Ticket already used","level":"error","message":"Validation failed","method":"POST","path":"/api/tickets/validate","requestId":"a19f8654-baf5-47e9-8c53-6cf7bff869b5","timestamp":"2025-07-04 11:20:04","validator":"68672a9ae7d8a21ff4bbdb59"}
{"error":"Ticket already used","level":"error","message":"Validation failed","method":"POST","path":"/api/tickets/validate","requestId":"9187131c-9ecf-40b2-8095-e8dc27321175","timestamp":"2025-07-04 11:21:26","validator":"68672a9ae7d8a21ff4bbdb59"}
{"error":"You do not own this ticket","level":"error","message":"Transfer failed","method":"POST","path":"/api/tickets/transfer/68679ae5259cecc269c3fa84","requestId":"30d30f64-5293-485e-a74c-c9bec24781d4","ticketId":"68679ae5259cecc269c3fa84","timestamp":"2025-07-04 11:21:41"}
{"error":"You do not own this ticket","level":"error","message":"Transfer failed","method":"POST","path":"/api/tickets/transfer/68679a46259cecc269c3fa78","requestId":"24d820c2-88d9-4acc-a23a-d27a1ae6bb2a","ticketId":"68679a46259cecc269c3fa78","timestamp":"2025-07-04 11:22:21"}
{"error":"You do not own this ticket","level":"error","message":"Transfer failed","method":"POST","path":"/api/tickets/transfer/68679a46259cecc269c3fa78","requestId":"f155b91a-e1f8-4088-bf54-ab5a7d1cd8d2","ticketId":"68679a46259cecc269c3fa78","timestamp":"2025-07-04 11:31:10"}
{"error":"Recipient not found","level":"error","message":"Transfer failed","method":"POST","path":"/api/tickets/transfer/68679a08259cecc269c3fa70","requestId":"a4eb05c9-f291-4e2e-bf67-f51738650b17","ticketId":"68679a08259cecc269c3fa70","timestamp":"2025-07-04 11:36:38"}
{"level":"error","message":"ðŸ’¥ Critical Error: Cannot refund used ticket Cannot refund used ticket","status":"error","statusCode":500,"timestamp":"2025-07-04 12:14:43"}
{"error":"You do not own this ticket","level":"error","message":"Transfer failed","method":"POST","path":"/api/tickets/transfer/68679ec8259cecc269c3fad6","requestId":"041f1fa1-8834-4175-b301-d711bde6d995","ticketId":"68679ec8259cecc269c3fad6","timestamp":"2025-07-04 12:19:52"}
{"error":"Recipient not found","level":"error","message":"Transfer failed","method":"POST","path":"/api/tickets/transfer/68679ec8259cecc269c3fad6","requestId":"c5fb0208-6275-4b78-bc62-aacb38182450","ticketId":"68679ec8259cecc269c3fad6","timestamp":"2025-07-04 12:20:44"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"3acdc802-e690-47db-b230-ad6fcc0e24aa","timestamp":"2025-07-04 14:22:27"}
{"level":"error","message":"ðŸ’¥ Critical Error: Ticket is not defined Ticket is not defined","status":"error","statusCode":500,"timestamp":"2025-07-04 14:46:02"}
{"level":"error","message":"ðŸ’¥ Critical Error: Ticket is not defined Ticket is not defined","status":"error","statusCode":500,"timestamp":"2025-07-04 14:46:20"}
{"level":"error","message":"ðŸ’¥ Critical Error: Ticket is not defined Ticket is not defined","status":"error","statusCode":500,"timestamp":"2025-07-04 14:49:52"}
{"body":{"eventId":"686771dba33d7992d65e6c02","tier":"VIP"},"error":"Event not found","level":"error","message":"Purchase failed","method":"POST","path":"/api/tickets/purchase","requestId":"e535af84-72a1-4877-abd8-972bbf45b61d","stack":"Error: Event not found\n    at D:\\Projects\\eswatickets\\backend\\routes\\ticketRoutes.js:127:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:04:13"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:41:12"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:42:43"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:42:45"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:42:48"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:42:55"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 15:43:47"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:44:00"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:44:14"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:44:15"}
{"code":"UNKNOWN_ERROR","error":"crypto.createHmac is not a function","level":"error","message":"Payment webhook processing failed","stack":"TypeError: crypto.createHmac is not a function\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:23:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:44:28"}
{"code":"UNKNOWN_ERROR","error":"Invalid webhook signature","level":"error","message":"Payment webhook processing failed","stack":"Error: Invalid webhook signature\n    at exports.handlePaymentWebhook (D:\\Projects\\eswatickets\\backend\\controllers\\paymentWebhooks.js:29:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-07-04 15:57:27"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"95364469-b225-4bac-87e9-467a5b6b9061","timestamp":"2025-07-04 16:24:18"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 16:28:42"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 16:42:19"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 17:52:51"}
{"error":"Email already exists","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"a3a776c6-f275-4572-beb3-8001c3381cdb","timestamp":"2025-07-04 18:14:40"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"b5b93099-1548-4005-8727-7b5b1b811b01","timestamp":"2025-07-04 18:17:53"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"201ef47c-1358-4778-89a8-21b363a955ca","timestamp":"2025-07-04 18:18:09"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"3ba824cb-e71f-4e3f-8809-db5578e7bc66","timestamp":"2025-07-04 18:18:32"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"fb0757c5-2023-41c1-b6d8-f569f54770a8","timestamp":"2025-07-04 18:18:44"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"77ce7a82-9079-4829-9d14-dbccedcaa04e","timestamp":"2025-07-04 18:21:48"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"5b3cd14e-5638-42e0-855b-6b2fd863a0a6","timestamp":"2025-07-04 18:21:51"}
{"level":"error","message":"UNHANDLED REJECTION! Shutting down...","timestamp":"2025-07-04 18:21:59"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"75d80b6c-9ff9-4fbc-ab2a-f68c7e9934eb","timestamp":"2025-07-04 18:22:12"}
{"error":"Validation error: \"role\" must be one of [attendee, organizer, staff, super_admin]","level":"error","message":"Registration error","method":"POST","path":"/api/auth/register","requestId":"7e7ac320-fa36-4ea0-8a49-b908bcc616dd","timestamp":"2025-07-04 18:22:22"}
{"error":"Ticket already used","level":"error","message":"Validation failed","method":"POST","path":"/api/tickets/validate","requestId":"b0e32096-87aa-4800-96c5-fc61f7e1f868","timestamp":"2025-07-04 21:22:48","validator":"6867ffeccfeeca807ab13b76"}
